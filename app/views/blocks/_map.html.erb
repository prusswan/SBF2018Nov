<% content_for :head do %>

  <!-- script src="http://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places&sensor=false" type="text/javascript"></script -->

  <!-- script src="http://serverapi.arcgisonline.com/jsapi/arcgis/?v=2.8"></script -->
  <!-- script type='text/JavaScript' src="http://www.onemap.sg/API/JS?accessKEY=<%= Settings.onemap_api_key %>&v=2.8&type=full"></script -->
  <!-- script src="http://t1.onemap.sg/om_js/arcgis_js_api/library/2.8/arcgis/js/default.js" type="text/javascript"></script -->
  <!-- %= javascript_include_tag 'onemap' % -->
  <!-- link rel="stylesheet" type="text/css" href="http://t1.onemap.sg/om_js/arcgis_js_api/library/2.8/arcgis/js/dojo/dijit/themes/tundra/tundra.css"/ -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.10/lodash.js"></script>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.min.css">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css">
  <link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.0.4/dist/MarkerCluster.Default.css">
  <link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.0.4/dist/MarkerCluster.css">
<% end %>



<div id="address" data-address="<%= address %>"><%= address %>
  <div id="mapdiv" style="width: 100%; height: 400px"></div>
</div>

<script type="text/javascript">
  (function() {
    var initMap, loadLeaflet, showBlock;

    var urls = [
      'https://unpkg.com/leaflet@1.3.1/dist/leaflet.js',
      "https://unpkg.com/leaflet.markercluster@1.0.4/dist/leaflet.markercluster.js"
    ];

    function loadScript( url, callback ) {
      console.log("loading url", url);
      var script = document.createElement( "script" )
      script.type = "text/javascript";
      if(script.readyState) {  //IE
        script.onreadystatechange = function() {
          if ( script.readyState === "loaded" || script.readyState === "complete") {
            script.onreadystatechange = null;
            callback();
          }
        };
      } else {  //Others
        script.onload = function() {
          callback();
        };
      }

      script.src = url;
      document.getElementsByTagName( "body" )[0].appendChild( script );
    }

    var scriptNumber = 0;

    var recursiveCallback = function() {
      if (++scriptNumber < urls.length) {
        loadScript(urls[scriptNumber], recursiveCallback)
      } else {
        console.log('leaflet loaded, attempt to initMap');
        initMap();
      }
    }

    loadLeaflet = function() {
      var blocksPromise = $.getJSON("https://cdn.jsdelivr.net/gh/prusswan/SBF2018Nov/public/blocks_all.geojson");
      //var stopsPromise = $.getJSON("https://cdn.rawgit.com/prusswan/SBF2018May/44236bfe/public/busstops_all.geojson");
      // var stopsPromise = $.getJSON('/busstops_all.geojson');

      $.when(blocksPromise).then(function(data, data2) {
        window.blocksData = data;
        //window.stopsData = data2;
        loadScript(urls[0], recursiveCallback);
      }).fail(function(jqxhr, textStatus, errorThrown) {
        console.log(errorThrown);
      });


    };

    var busMarkers;

    buildBusLayer = function(json) {
      var busIcon = L.icon({
        iconUrl: 'https://www.mytransport.sg/img/bus.gif',
        iconSize: [20, 29]
      });

      var data = _.map(json, f => {return {
        type: 'Point',
        coordinates: [f.lon, f.lat],
        id: f.stop,
        properties: {
          Description: f.name,
          BusServices: _.map(f.services, s => s.bus_no)
        }
      }});

      var busLayer = L.geoJson(data, {
        pointToLayer: function(feature, latlng) {
          return new L.marker(latlng, {
            icon: busIcon
          });
        },
        onEachFeature: function(feature, layer) {
          var popup = feature.id + ': ' + feature.properties.Description + '<br>' +
            feature.properties.BusServices.toString();

          layer.bindPopup(popup);
        }
      });

      return busLayer;
    };

    updateBusStops = function(lat, lng) {
      $.ajax({
        url: 'https://www.onemap.sg/nearby-api/getNearestBusStops',
        data: {
          lat: lat,
          lon: lng
        },
        success: function(busResult) {
          console.log("nearest stops", busResult);
          updateBusLayer(busResult);
        }
      });
    }
    updateBusLayer = function(data) {
      let stops = data.map((val,i,data) => {
        return val["id"];
      });

      window.stops = stops;
      window.stopsInfo = _.groupBy(data, s => s.id);

      $.ajax({
        url: 'https://developers.onemap.sg/publicapi/busexp/getbusStopsInfo?busStopNo=' + stops.join(","),
        data: {
          token: "<%= ApplicationController.helpers.onemap_publicapi_token %>"
        },
        success: function(serviceResult) {
          console.log("stops and services", serviceResult);
          window.servicesInfo = serviceResult['BusStopInfo'];
          window.services = _.chain(window.servicesInfo)
            .sortBy(s => s.bus_no)
            .groupBy(s => s.bus_stop)
            .map((v,k) => {return Object.assign({},JSON.parse(k), {
              stop: k,
              lon: window.stopsInfo[k][0].lon,
              lat: window.stopsInfo[k][0].lat,
              name: window.stopsInfo[k][0].name,
              road: window.stopsInfo[k][0].road,
              services: _.map(v, i => _.pick(i,['bus_no','bus_name']))
            })}).value();

          // update busLayer
          busMarkers.clearLayers();
          var busLayer = buildBusLayer(window.services);
          window.busLayer = busLayer;
          busMarkers.addLayer(busLayer);
        }
      });
    };

    initMap = function() {
      var address, basemap, center, newMap;
      console.log('creating map');
      basemap = L.tileLayer('https://maps-{s}.onemap.sg/v3/Default/{z}/{x}/{y}.png', {
        detectRetina: true,
        maxZoom: 24,
        maxNativeZoom: 19,
        minZoom: 11
      });
      center = L.bounds([1.56073, 104.11475], [1.16, 103.502]).getCenter();
      // document.getElementById('mapdiv').innerHTML = "<div id='mapdiv' style='width: 100%; height: 350px;'></div>";
      $('#mapdiv').remove();
      $('#address').append("<div id='mapdiv' style='width: 100%; height: 350px;'></div>");

      newMap = L.map('mapdiv').setView([center.x, center.y], 12);
      newMap.setMaxBounds([[1.56073, 104.1147], [1.16, 103.502]]);
      basemap.addTo(newMap);


      var geoJsonLayer = L.geoJson(window.blocksData, {
        style: function(feature) {
          return {
            color: "red"
          };
        },
        pointToLayer: function(feature, latlng) {
          return new L.CircleMarker(latlng, {
            radius: 8,
            fillOpacity: 0.85
          });
        },
        onEachFeature: function(feature, layer) {
          var popup = "<a class='pjax' id='block" + feature.id + "' href='" + feature.properties.link + "'>" + feature.properties.address + "</a>";
          layer.bindPopup(popup);

          layer.on('mouseover', function (e) {
              this.openPopup();
          });
          layer.on('mouseout', function (e) {
              this.closePopup();
          });

          layer.on('click', function() {
            $('#block' + feature.id).click();
          });

        }
      });
      var markers = L.markerClusterGroup();
      markers.addLayer(geoJsonLayer);
      newMap.addLayer(markers);

      var busLayer = buildBusLayer(window.stopsData);

      busMarkers = L.markerClusterGroup({
        disableClusteringAtZoom: 16
      });
      busMarkers.addLayer(busLayer);
      newMap.addLayer(busMarkers);

      newMap.on('zoomend', function() {
        if (newMap.getZoom() < 16) {
          newMap.removeLayer(busMarkers);
        }
        else {
          newMap.addLayer(busMarkers);
        }
      })

      newMap.on('moveend', function(e) {
        var center = e.target.getCenter();
        updateBusStops(center.lat, center.lng);
      })

      window.map = newMap;
      // $('#mapdiv').height('350px');
      // window.map.invalidateSize();
      address = $('#address').data('address');
      showBlock(address);
    };

    function updateAddress(id, address, longlat, result) {
      $.ajax({ url: '/blocks/' + id,
        type: 'POST',
        beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
        data: { id: id, address: address, longlat: longlat, geocode_result: result},
        success: function(response) {
          console.log(longlat, 'updated coords for block '+ id);
        }
      });
    }

    showBlock = function(address) {
      $.ajax({
        url: 'https://developers.onemap.sg/commonapi/search?searchVal=' + encodeURI(address) + '&returnGeom=Y&getAddrDetails=Y&pageNum=1',
        success: function(result) {
          var lat, lng, location, map, marker;
          console.log('geocoding', result);
          if (result['results'].length < 1) {
            return;
          }
          location = result['results'][0];
          lat = location['LATITUDE'];
          lng = location['LONGITUDE'];

          var longlat = lng + "," + lat;

          <% if params[:id] %>
            var id = <%= params[:id] %>;
            // updateAddress(id, address, longlat, result['results']);
          <% end %>

          map = window.map;

          if (typeof L === 'undefined') {
            console.log("loading leaflet again?!");
            loadLeaflet();
          }
          marker = new L.Marker([lat, lng]).addTo(map);
          map.setView([lat, lng], 16);

          updateBusStops(lat, lng);
        }
      });
    };

    // prevent duplicate event handlers: https://github.com/defunkt/jquery-pjax/issues/570
    $(document).off('rails_admin.dom_ready').on('rails_admin.dom_ready', function(e) {
      var path = "<%= request.path %>";
      console.log(path, window.location.pathname, 'event:', e);

      var blockRegex = /^\/block\/[0-9]+$/;
      if (!blockRegex.test(window.location.pathname)) {
        console.log("not at block view, do nothing");
        return;
      }

      if (path != window.location.pathname) {
        console.log("event paths don't match, do nothing");
        return;
      }

      if (window.map === undefined) {
        if (typeof L === 'undefined') {
          console.log("preparing to load leaflet");
          loadLeaflet();
        } else {
          console.log("leaflet alrdy loaded, load the map");
          initMap();
        }
      } else {
        console.log("map exist..draw something?");
        // $('#mapdiv').height('350px');

        initMap();
        // window.map.invalidateSize();
      }
    });

  }).call(this);
</script>
